name: CI/CD

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  workflow:
    runs-on: ubuntu-latest
    permissions: write-all
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup Java env to build android app
        uses: actions/setup-java@v1
        with:
          java-version: "16.x"

      - name: Setup Flutter env
        uses: subosito/flutter-action@v2
        with:
          channel: "beta" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # can specify exact flutter version

      - name: Verify Flutter version
        run: flutter --version

      - name: Verify Flutter env
        run: flutter doctor

      - name: Get app dependencies
        run: flutter pub get

      - name: Check for code formatting issues
        run: dart format --set-exit-if-changed .

      - name: Static code analysis
        run: flutter analyze .

      - name: Run widget tests
        run: flutter test

      - name: Build apk
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: flutter build apk

      - name: Upload apk
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: apk ${{ github.run_number }}
          release_name: ${{ github.event.repository.name }} v${{ github.run_number }}

      - name: Upload Release APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: ${{ github.event.repository.name }}.apk
          asset_content_type: application/zip
